<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Debug Excel - Production Dashboard</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .table-container {
            margin: 20px 0;
            overflow-x: auto;
        }
        .table thead th {
            background-color: #343a40;
            color: white;
            text-align: center;
        }
        .table-striped tbody tr:nth-of-type(odd) {
            background-color: #f8f9fa;
        }
        .preview-summary {
            background-color: #e9ecef;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .btn-custom {
            margin-right: 10px;
        }
        #previewResult, #brasResult, #uploadResult, #notificationModal {
            display: none;
        }
        .modal-dialog {
            max-width: 500px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="mt-4 text-center">Debug Excel - Production Dashboard</h1>

        <form id="excelForm" enctype="multipart/form-data" class="mb-4">
            <div class="mb-3">
                <label for="excelFile" class="form-label">Upload Excel File</label>
                <input type="file" class="form-control" id="excelFile" name="excelFile" accept=".xlsx,.xls">
            </div>
            <button type="button" id="previewBtn" class="btn btn-primary btn-custom">Preview Excel</button>
            <button type="button" id="brasBtn" class="btn btn-info btn-custom" data-bs-toggle="modal" data-bs-target="#brasModal">Preview BRAS List</button>
            <button type="button" id="uploadBtn" class="btn btn-success btn-custom">Upload</button>
        </form>

        <div id="previewResult"></div>
        <div id="uploadResult"></div>

        <!-- BRAS Modal -->
        <div class="modal fade" id="brasModal" tabindex="-1" aria-labelledby="brasModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="brasModalLabel">BRAS List</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="brasModalBody"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notification Modal -->
        <div class="modal fade" id="notificationModal" tabindex="-1" aria-labelledby="notificationModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="notificationModalLabel">Notification</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="notificationModalBody"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize modal instances
        const brasModal = new bootstrap.Modal(document.getElementById('brasModal'), { backdrop: 'static' });
        const notificationModal = new bootstrap.Modal(document.getElementById('notificationModal'), { backdrop: 'static' });

        document.getElementById('previewBtn').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('excelForm'));
            fetch('/en/dashboard/debug-excel?preview=true', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                const previewResult = document.getElementById('previewResult');
                if (data.success) {
                    previewResult.style.display = 'block';
                    const dateRange = data.lastWeek.dateRange;
                    const datesDisplay = dateRange[0] && dateRange[1] ? `${dateRange[0]} to ${dateRange[1]}` : 'No date range found';
                    previewResult.innerHTML = `
                        <div class="preview-summary">
                            <h3>File Summary</h3>
                            <p><strong>Total Rows:</strong> ${data.totalRows}</p>
                            <p><strong>Last Week Name:</strong> ${data.lastWeek.name}</p>
                            <p><strong>Dates:</strong> ${datesDisplay}</p>
                        </div>
                        <div class="table-container">
                            <h3>Last Week Preview</h3>
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>BRAS</th>
                                        <th>Shift</th>
                                        <th>REF</th>
                                        <th>Planifié</th>
                                        <th>Réalisé</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.lastWeek.data.map(row => `
                                        <tr>
                                            <td>${row.bras}</td>
                                            <td>${row.shift}</td>
                                            <td>${row.ref}</td>
                                            <td>${row.planifie}</td>
                                            <td>${row.realise}</td>
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                        <div class="table-container">
                            <h3>Raw Data Preview</h3>
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        ${data.rawData[0].map((_, index) => `<th>${String.fromCharCode(65 + index)}</th>`).join('')}
                                    </tr>
                                </thead>
                                <tbody>
                                    ${data.rawData.map(row => `
                                        <tr>
                                            ${row.map(cell => `<td>${cell || ''}</td>`).join('')}
                                        </tr>
                                    `).join('')}
                                </tbody>
                            </table>
                        </div>
                    `;
                } else {
                    previewResult.style.display = 'block';
                    previewResult.innerHTML = `<div class="alert alert-danger" role="alert">Preview failed: ${data.message || 'Unknown error'}</div>`;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('previewResult').innerHTML = `<div class="alert alert-danger" role="alert">Error: ${error.message}</div>`;
            });
        });

        document.getElementById('brasBtn').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('excelForm'));
            fetch('/en/dashboard/debug-excel?preview=true', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const modalBody = document.getElementById('brasModalBody');
                    modalBody.innerHTML = `
                        <ul class="list-group">
                            ${data.brasNames.map(bras => `<li class="list-group-item">${bras}</li>`).join('')}
                        </ul>
                    `;
                    brasModal.show();
                } else {
                    document.getElementById('brasModalBody').innerHTML = `<div class="alert alert-danger" role="alert">Failed to load BRAS list: ${data.message || 'Unknown error'}</div>`;
                    brasModal.show();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('brasModalBody').innerHTML = `<div class="alert alert-danger" role="alert">Error: ${error.message}</div>`;
                brasModal.show();
            });
        });

        document.getElementById('uploadBtn').addEventListener('click', function() {
            const formData = new FormData(document.getElementById('excelForm'));
            fetch('/en/dashboard/debug-excel', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                const modalBody = document.getElementById('notificationModalBody');
                if (data.success) {
                    modalBody.innerHTML = `<div class="alert alert-success" role="alert">File uploaded and saved successfully!</div>`;
                } else {
                    modalBody.innerHTML = `<div class="alert alert-danger" role="alert">Upload failed: ${data.message || 'Unknown error'}</div>`;
                }
                notificationModal.show();
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('notificationModalBody').innerHTML = `<div class="alert alert-danger" role="alert">Error: ${error.message}</div>`;
                notificationModal.show();
            });
        });

        // Ensure modal backdrop is removed on hide
        brasModal._element.addEventListener('hidden.bs.modal', function () {
            console.log('BRAS modal hidden');
            document.body.classList.remove('modal-open');
            const backdrop = document.querySelector('.modal-backdrop');
            if (backdrop) backdrop.remove();
        });

        notificationModal._element.addEventListener('hidden.bs.modal', function () {
            console.log('Notification modal hidden');
            document.body.classList.remove('modal-open');
            const backdrop = document.querySelector('.modal-backdrop');
            if (backdrop) backdrop.remove();
        });
    </script>
</body>
</html>